<?xml version="1.0" encoding="UTF-8"?>

<!-- 学习di的两种配置-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 4.有参构造方法 创建bean/基于构造函数的依赖注入 -->

    <!-- 被引用类bean声明 -->
    <bean id="userDao" class="com.atguigu.ioc_02.UserDao"/>

    <!-- 场景1: 多参数，可以按照相应构造函数的顺序注入数据 -->
    <bean id="userService" class="com.atguigu.ioc_02.UserService">
        <!-- value直接注入基本类型值 -->
        <constructor-arg value="18"/>
        <constructor-arg value="赵伟风"/>
        <!-- ref写被注入类的 bean_id -->
        <constructor-arg ref="userDao"/>
    </bean>


    <!-- 场景2: 多参数，可以按照相应构造函数的名称注入数据 -->
<!--    <bean id="userService" class="com.atguigu.ioc_02.UserService">-->
        <!-- value直接注入基本类型值 -->
<!--        <constructor-arg name="name" value="小李"/>-->
<!--        <constructor-arg name="userDao" ref="userDao"/>-->
<!--        <constructor-arg name="age" value="18"/>-->
<!--    </bean>-->


    <!-- 场景3: 多参数，可以按照相应构造函数的角标注入数据
               index从0开始 构造函数(0,1,2....)
    -->
<!--    <bean id="userService" class="com.atguigu.ioc_02.UserService">-->
        <!-- value直接注入基本类型值 -->
<!--        <constructor-arg index="1" value="小李"/>-->
<!--        <constructor-arg index="2" ref="userDao"/>-->
<!--        <constructor-arg index="0" value="18"/>-->
<!--    </bean>-->

    <!-- 基于Setter方法依赖注入 -->
    <!-- 被引用类bean声明 -->
    <bean id="movieFinder" class="com.atguigu.ioc_02.MovieFinder"/>
    <bean id="simpleMovieLister" class="com.atguigu.ioc_02.SimpleMovieLister">
        <!-- setter方法，注入movieFinder对象的标识id
             name = 方法名【去掉set和开头字母大写的方法名】  ref = 引用bean的id值
         -->
        <property name="movieFinder" ref="movieFinder" />
        <!-- setter方法，注入基本数据类型movieName
             name = 方法名【去掉set和开头字母大写的方法名】 value= 基本类型值
         -->
        <property name="movieName" value="消失的她"/>
    </bean>



</beans>